# -*- coding: utf-8 -*-
"""prodigy-task-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mabo4BigMtslglFo2eXSXGKFwlxAotxq
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/Salary Data.csv')
df

# Load the dataset
data = {
    'Age': [32.0, 28.0, 45.0, 36.0, 52.0, 35.0, 43.0, 29.0, 34.0, 44.0],
    'Gender': ['Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female'],
    'Education Level': ["Bachelor's", "Master's", "PhD", "Bachelor's", "Master's", "Bachelor's", "Master's", "Bachelor's", "Bachelor's", "PhD"],
    'Job Title': ['Software Engineer', 'Data Analyst', 'Senior Manager', 'Sales Associate', 'Director', 'Senior Marketing Analyst', 'Director of Operations', 'Junior Project Manager', 'Senior Operations Coordinator', 'Senior Business Analyst'],
    'Years of Experience': [5.0, 3.0, 15.0, 7.0, 20.0, 8.0, 19.0, 2.0, 7.0, 15.0],
    'Salary': [90000.0, 65000.0, 150000.0, 60000.0, 200000.0, 85000.0, 170000.0, 40000.0, 90000.0, 150000.0]
}

df = pd.DataFrame(data)

# Display basic information about the dataset
print(df.info())

# Check for missing values
print(df.isnull().sum())

# Summary statistics
print(df.describe())

# Visualize the distribution of numeric variables
sns.pairplot(df)
plt.show()

# Visualize the distribution of Salary
sns.histplot(df['Salary'], bins=10, kde=True)
plt.title('Distribution of Salary')
plt.show()

# Explore the relationship between variables
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

# Boxplot of Salary by Gender
sns.boxplot(x='Gender', y='Salary', data=df)
plt.title('Salary by Gender')
plt.show()

# Boxplot of Salary by Education Level
sns.boxplot(x='Education Level', y='Salary', data=df)
plt.title('Salary by Education Level')
plt.xticks(rotation=45)
plt.show()

# Boxplot of Salary by Job Title
plt.figure(figsize=(12, 6))
sns.boxplot(x='Job Title', y='Salary', data=df)
plt.title('Salary by Job Title')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()